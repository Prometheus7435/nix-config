* What am I
This is my NixOS config using flakes. I'm taking a lot of the initial setup from [[https://github.com/wimpysworld/nix-config/tree/c44a1bd13868e759bb215f54ca1f3fe49eba6dae][Whimpy's]] config. I'm quite new to this and his setup is quite close to what I wanted anyway.

* What do I want from me
The big things I want is to have a consistent KDE setup using ZFS for the file system. And someday I'll figure out how the emacs-overlay works and then use that to replace my emacs org-babel config.

** File System

| *Hostname* | *OEM*    | *Model*         | *OS*  | *Filesystem* | *Role*   | *Status* |
| phoenix    | Thinkpad | T14 AMD Gen 1   | NixOS | ZFS          | laptop   | WIP      |
| [[./nixos/starbase/][starbase]]   | DIY      | AMD EPYC 7302   | NixOS | ZFS          | racktop  | DONE     |
| [[./nixos/fermi/][fermi]]      | VM       | VM              | NixOS | ext4         | pihole   | TODO     |
| akira      | Thinkpad | X1 tablet Gen 3 | NixOS | ZFS          | slatetop | TODO     |
| [[./nixos/odyssey/][odyssey]]    | Custom   | Custom          | NixOS | ZFS          | desktop  | WIP      |
| mars       | VM       | VM              | NixOS | ext4         | IOT VM   | TODO     |


I like ZFS and NixOS seems to have the easiest and most stable implementation of it I've come across in Linux. Due to the difference in licenses, ZFS can't be added to the Linux kernel like Btrfs is. To use it in most distros, you have to set it up yourself and the risk is all on you. Not fun. But NixOS has the modules addded by default and make it super easy to implement. Here's hoping that it's as stable long term as it's been short term.

The only place where I won't be using ZFS is in the VMs. This is because there's no benefit from nesting ZFS, as it were. ZFS works better when it has direct access to the drives. So I'll be using boring ol' ext4 on the VMs. That way, I can take snapshots of the VMs using ZFS and not worry.

** Install

Initially, I was using a bash script from [[https://github.com/mcdonc/.nixconfig/blob/master/prepsystem.sh][mcdonc]] to make a a basic config for a non-flake install. Now I'm using [[https://github.com/wimpysworld/nix-config/blob/c44a1bd13868e759bb215f54ca1f3fe49eba6dae/scripts/install.sh][Whimpy's install script]] that uses [[https://github.com/nix-community/disko/tree/master][Distro]] to build the root filesytem.

** Computers
A lot of this will be the same, as I like my KDE and ZFS. The differences will largely come down to the specific hardware found in each. The status below is dependent on the status of the host config and this flake setup overall. For example, my laptop runs NixOS, but it's being managed in the more traditional configuration.nix in /etc/nixos way.

Because I'm being cheeky; laptop is laptop, slatetop is a tablet, racktop is a server, virtualtop are VMs, handtop is a phone, and desktop is desktop.

*** [[./nixos/odyssey/][Desktop]]

*** Laptop

*** Tablet


** [[./nixos/starbase/][Host Server]]
Minimum install, just need it to be on top of ZFS and run VMs. Like with many hobbies I take up, I tend to take the hard route. This server and the VMs are on different VLANs.

[TODO] clean up the files to only what's relevant.

** Virtual Machines
*** IOT
*** Home Assistant
*** Personal Services
*** [[./nixos/fermi/][PiHole]]

* Machine Naming Convention
Surely the most important subject, how to name all the things :D Why do this when you should treat mass deployments like cattle? Mostly so I can easily identify them in tailscale. Also, how many serve

I'm following the typical, something super nerdy thing I care deeply for. In this case, Star Trek.

The computers are named after Starfleet classes of starship. Roughly analogous to the size / capability of the class to the computer. For example, my tablet is named after the Akira class, a smaller nimble vessel. While the desktop is named for the Odyssey class, a big strong capable vessel.

The servers are named after starbases. The main one is named after the starbase that orbits Earth. Any offsite ones will be named Deep Space <n> and VMs will be named after a planet of the system that starbase resides in.

Smaller VMs are named after shuttlecraft classes, with the first being the Fermi acting as a pihole.

* Troubleshooting
** Home-Manager
I tried to rebuild the home-manager setup after a fresh install of starbase and it gave me an error. It said it could not find suitable profile directory even though the folder it was looking for exists. Turns out, it's looking for a different folder it doesn't tell you about. A simple

#+begin_src bash
  mkdir -p ~/.local/state/nix/profiles
#+end_src

rerun the command, and it's all good.

Citation to solution:
https://www.reddit.com/r/Nix/comments/1443k3o/home_manager_installation_could_not_find_suitable/
